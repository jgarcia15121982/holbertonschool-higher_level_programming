2-matrix_divided.txt
# ===============================================
# Unit test 2-matrix_divided
# ===============================================


Using ''matrix_divided''
---------------------


Import module:
       >>> matrix_divided = __import__("2-matrix_divided").matrix_divided


-----------------------------
-----------------------------
    No arguments

    >>> matrix_divided()
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

-----------------------------
    Only one argument

    >>> matrix_divided(2)
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided([1,2])
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

    >>> matrix_divided('str')
    Traceback (most recent call last):
    TypeError: matrix_divided() missing 1 required positional argument: 'div'

-----------------------------
    More than two arguments

    >>> matrix_divided(2, 3, 4)
    Traceback (most recent call last):
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

    >>> matrix_divided([1,2], [3, 4], 0)
    Traceback (most recent call last):
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

    >>> matrix_divided('str', (1,2), {3, 4})
    Traceback (most recent call last):
    TypeError: matrix_divided() takes 2 positional arguments but 3 were given

-----------------------------
    No same size

    >>> matrix_divided([[1], [2, 3]], 5)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

    >>> matrix_divided([[1.0, 1.1, 1.2], [2, 3]], 5)
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

-----------------------------
    Div not a number

    >>> matrix_divided([[1, 1.1], [2, 3]], 'str')
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[1, 1.1], [2, 3]], 'c')
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[1, 1.1], [2, 3]], (1, 2))
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[1, 1.1], [2, 3]], [1, 2])
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[1, 1.1], [2, 3]], {1, 2})
    Traceback (most recent call last):
    TypeError: div must be a number

    >>> matrix_divided([[1, 1.1], [2, 3]], {'a': 1, 'b': 2})
    Traceback (most recent call last):
    TypeError: div must be a number

-----------------------------
    Div equal to zero

    >>> matrix_divided([[1, 1.1], [2, 3]], 0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

    >>> matrix_divided([[1, 1.1], [2, 3]], 0.0)
    Traceback (most recent call last):
    ZeroDivisionError: division by zero

-----------------------------
    Long float numbers

    >>> matrix_divided([[10.666666666, 5.00], [2, 8.444]], 2.0)
    [[5.33, 2.5], [1.0, 4.22]]


-----------------------------
    Divide by infinite num

    >>> matrix_divided([[1, 1.1], [2, 3]], float('inf'))
    [[0.0, 0.0], [0.0, 0.0]]

-----------------------------
    None arguments

    >>> matrix_divided([[1, 1.1], [2, 3]], None)
    Traceback (most recent call last):
    TypeError: div must be a number


